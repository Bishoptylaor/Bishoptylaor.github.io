<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bishop</title>
  <icon>https://bishoptylaor.github.io/icon.png</icon>
  
  <link href="https://bishoptylaor.github.io/atom.xml" rel="self"/>
  
  <link href="https://bishoptylaor.github.io/"/>
  <updated>2024-04-28T13:23:26.667Z</updated>
  <id>https://bishoptylaor.github.io/</id>
  
  <author>
    <name>Bishop</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>raft</title>
    <link href="https://bishoptylaor.github.io/interview/distribution/raft/"/>
    <id>https://bishoptylaor.github.io/interview/distribution/raft/</id>
    <published>2024-04-28T13:22:37.000Z</published>
    <updated>2024-04-28T13:23:26.667Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Raft&lt;br&gt;Follower、Candidate、Leader&lt;/p&gt;
&lt;p&gt;图解raft算法：轻松理解Raft算法</summary>
        
      
    
    
    
    <category term="面试" scheme="https://bishoptylaor.github.io/categories/interview/"/>
    
    <category term="分布式" scheme="https://bishoptylaor.github.io/categories/interview/distribution/"/>
    
    
  </entry>
  
  <entry>
    <title>simulation02</title>
    <link href="https://bishoptylaor.github.io/interview/log/simulation02/"/>
    <id>https://bishoptylaor.github.io/interview/log/simulation02/</id>
    <published>2024-04-28T10:51:47.000Z</published>
    <updated>2024-04-28T13:23:26.667Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一面&lt;br&gt;epoll、select、poll 区别&lt;br&gt;epoll 的水平触发和边缘触发的区别&lt;br&gt;TCP 的流量控制&lt;br&gt;为什么有了流量控制还要有拥塞控制?&lt;br&gt;TCP</summary>
        
      
    
    
    
    <category term="面试" scheme="https://bishoptylaor.github.io/categories/interview/"/>
    
    <category term="实录" scheme="https://bishoptylaor.github.io/categories/interview/log/"/>
    
    
  </entry>
  
  <entry>
    <title>ETCD 面试必备</title>
    <link href="https://bishoptylaor.github.io/interview/distribution/etcd/"/>
    <id>https://bishoptylaor.github.io/interview/distribution/etcd/</id>
    <published>2024-04-28T02:36:46.000Z</published>
    <updated>2024-04-28T10:35:44.780Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;etcd分布式锁的实现流程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;建立连接&lt;br&gt;客户端连接 etcd，以 &amp;#x2F;etcd&amp;#x2F;lock 为前缀创建全局唯一的 key， 假设第一个客户端对应的</summary>
        
      
    
    
    
    <category term="面试" scheme="https://bishoptylaor.github.io/categories/interview/"/>
    
    <category term="分布式" scheme="https://bishoptylaor.github.io/categories/interview/distribution/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="面试" scheme="https://bishoptylaor.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="etcd" scheme="https://bishoptylaor.github.io/tags/etcd/"/>
    
  </entry>
  
  <entry>
    <title>kafka</title>
    <link href="https://bishoptylaor.github.io/interview/distribution/kafka/"/>
    <id>https://bishoptylaor.github.io/interview/distribution/kafka/</id>
    <published>2024-04-28T02:36:20.000Z</published>
    <updated>2024-04-28T02:42:51.472Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Kafka-方案及其痛点&quot;&gt;&lt;a href=&quot;#Kafka-方案及其痛点&quot; class=&quot;headerlink&quot; title=&quot;Kafka 方案及其痛点&quot;&gt;&lt;/a&gt;Kafka 方案及其痛点&lt;/h2&gt;&lt;p&gt;之前，我们采用 Apache Kafka 作为消息平台，</summary>
        
      
    
    
    
    <category term="面试" scheme="https://bishoptylaor.github.io/categories/interview/"/>
    
    <category term="分布式" scheme="https://bishoptylaor.github.io/categories/interview/distribution/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="面试" scheme="https://bishoptylaor.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="kafka" scheme="https://bishoptylaor.github.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>Golang语言面试题 - Grpc</title>
    <link href="https://bishoptylaor.github.io/interview/go/go-grpc/"/>
    <id>https://bishoptylaor.github.io/interview/go/go-grpc/</id>
    <published>2024-04-27T08:19:02.000Z</published>
    <updated>2024-04-28T02:40:12.137Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;grpc和http区别&quot;&gt;&lt;a href=&quot;#grpc和http区别&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="面试" scheme="https://bishoptylaor.github.io/categories/interview/"/>
    
    <category term="go" scheme="https://bishoptylaor.github.io/categories/interview/go/"/>
    
    
  </entry>
  
  <entry>
    <title>Go语言 Slice 结构的底层实现</title>
    <link href="https://bishoptylaor.github.io/golang/advanced-tutorial/go-slice/"/>
    <id>https://bishoptylaor.github.io/golang/advanced-tutorial/go-slice/</id>
    <published>2024-04-27T01:10:08.000Z</published>
    <updated>2024-04-28T08:45:45.395Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h4 id=&quot;append-性能损耗&quot;&gt;&lt;a href=&quot;#append-性能损耗&quot; class=&quot;headerlink&quot; title=&quot;append 性能损耗&quot;&gt;&lt;/a&gt;append 性能损耗&lt;/h4&gt;&lt;p&gt;未指定长度或者长度不足时，双倍扩容（cap &amp;lt; 1024）;</summary>
        
      
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="进阶教程笔记" scheme="https://bishoptylaor.github.io/categories/golang/advanced-tutorial/"/>
    
    
    <category term="go" scheme="https://bishoptylaor.github.io/tags/go/"/>
    
    <category term="基础知识" scheme="https://bishoptylaor.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="Slice" scheme="https://bishoptylaor.github.io/tags/Slice/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式23-中介模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/23-mediator/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/23-mediator/</id>
    <published>2024-04-26T13:35:46.000Z</published>
    <updated>2024-04-26T10:20:05.970Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式22-解释器模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/22-interpreter/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/22-interpreter/</id>
    <published>2024-04-26T12:35:46.000Z</published>
    <updated>2024-04-26T10:18:50.734Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式21-命令模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/21-command/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/21-command/</id>
    <published>2024-04-26T12:18:46.000Z</published>
    <updated>2024-04-26T10:18:46.513Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式20-备忘录模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/20-memento/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/20-memento/</id>
    <published>2024-04-26T11:35:46.000Z</published>
    <updated>2024-04-26T10:10:53.780Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式19-访问者模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/19-visitor/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/19-visitor/</id>
    <published>2024-04-26T11:09:46.000Z</published>
    <updated>2024-04-26T10:10:46.540Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式18-迭代器模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/18-iterator/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/18-iterator/</id>
    <published>2024-04-26T10:49:46.000Z</published>
    <updated>2024-04-26T10:10:41.431Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式17-状态模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/17-state/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/17-state/</id>
    <published>2024-04-26T10:25:46.000Z</published>
    <updated>2024-04-26T10:10:33.896Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go语言 Map 结构的底层实现</title>
    <link href="https://bishoptylaor.github.io/golang/advanced-tutorial/go-map/"/>
    <id>https://bishoptylaor.github.io/golang/advanced-tutorial/go-map/</id>
    <published>2024-04-26T10:21:40.000Z</published>
    <updated>2024-04-27T01:52:41.626Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Golang-中的-map-详解&quot;&gt;&lt;a href=&quot;#Golang-中的-map-详解&quot; class=&quot;headerlink&quot; title=&quot;Golang 中的 map 详解&quot;&gt;&lt;/a&gt;Golang 中的 map 详解&lt;/h2&gt;&lt;h3</summary>
        
      
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="进阶教程笔记" scheme="https://bishoptylaor.github.io/categories/golang/advanced-tutorial/"/>
    
    
    <category term="go" scheme="https://bishoptylaor.github.io/tags/go/"/>
    
    <category term="基础知识" scheme="https://bishoptylaor.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式16-职责链模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/16-chain/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/16-chain/</id>
    <published>2024-04-26T10:10:46.000Z</published>
    <updated>2024-04-26T10:10:29.985Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式15-策略模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/15-strategy/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/15-strategy/</id>
    <published>2024-04-26T09:59:46.000Z</published>
    <updated>2024-04-26T10:10:23.260Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式14-模板模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/14-template/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/14-template/</id>
    <published>2024-04-26T09:55:46.000Z</published>
    <updated>2024-04-26T10:10:17.461Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式13-观察者模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/13-observer/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-act/13-observer/</id>
    <published>2024-04-26T09:50:46.000Z</published>
    <updated>2024-04-26T09:59:55.066Z</updated>
    
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="行为型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-act/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式12-享元模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-struct/12-flyweight/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-struct/12-flyweight/</id>
    <published>2024-04-26T09:30:46.000Z</published>
    <updated>2024-04-26T09:59:41.113Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;按照课程中的例子来理解，就是象棋棋子作为享元，可以被所有的对局共享，以达到减少内存的目的&lt;/p&gt;
</summary>
        
      
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="结构型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-struct/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Go设计模式11-组合模式</title>
    <link href="https://bishoptylaor.github.io/golang/go-design-pattern/gda-struct/11-composite/"/>
    <id>https://bishoptylaor.github.io/golang/go-design-pattern/gda-struct/11-composite/</id>
    <published>2024-04-26T09:24:46.000Z</published>
    <updated>2024-04-26T10:08:38.336Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;比较简单的例子是 人员架构中</summary>
        
      
    
    
    
    <category term="golang" scheme="https://bishoptylaor.github.io/categories/golang/"/>
    
    <category term="设计模式之美" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/"/>
    
    <category term="结构型模式" scheme="https://bishoptylaor.github.io/categories/golang/go-design-pattern/gda-struct/"/>
    
    
    <category term="必看必会" scheme="https://bishoptylaor.github.io/tags/%E5%BF%85%E7%9C%8B%E5%BF%85%E4%BC%9A/"/>
    
    <category term="设计模式" scheme="https://bishoptylaor.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
